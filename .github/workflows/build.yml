name: PYCM-Build

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        program: [Console]
    steps:
      - uses: actions/checkout@v2
      
      - name: DEBUG
        run: python -c "print('${{ github.sha }} ${{ github.ref }}')"
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      
      - name: Display current Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Pre build
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests
      
      - name: Build Console
        if: ${{ matrix.program == 'Console' }}
        run: |
          cd ${{ matrix.program }}
          pyinstaller -F Main.spec --clean -y
      
      - name: Zip binary for Mac and Linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cp -R ${{ matrix.program }}/dist/Main ./Builded
          zip -r Builded.zip Builded
          ls
      
      - name: Zip binary for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          xcopy ${{ matrix.program }}\dist\Main .\Builded\ /s /e /y
          .\zip.exe -r Builded.zip Builded
          ls
