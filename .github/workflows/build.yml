name: PYCM-Build

on: [push]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    
    steps:
      - name: Generate tag
        id: generate_tag
        run: echo "::set-output name=tag::$(date +%Y%m%d%H%M%S)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_tag.outputs.tag }} 
          release_name: Release at ${{ github.ref }}
          draft: false
          prerelease: true

  build:
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        program: [Console]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      
      - name: Display current Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Pre build
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests
      
      - name: Build Console
        if: ${{ matrix.program == 'Console' }}
        run: |
          cd ${{ matrix.program }}
          pyinstaller -F Main.spec --clean -y
      
      - name: Zip binary for Mac and Linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cp -R ${{ matrix.program }}/dist/Main ./${{ matrix.program }}-Builded
          zip -r ${{ matrix.os }}-${{ matrix.program }}.zip ${{ matrix.program }}-Builded
      
      - name: Zip binary for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          xcopy ${{ matrix.program }}\dist\Main .\${{ matrix.program }}-Builded\ /s /e /y
          .\zip.exe -r ${{ matrix.os }}-${{ matrix.program }}.zip ${{ matrix.program }}-Builded
      
      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ matrix.os }}-${{ matrix.program }}.zip
          asset_name: ${{ matrix.os }}-${{ matrix.program }}.zip
          asset_content_type: application/gzip
